# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

#    - name: Publish to GitHub Packages
#      id: publish
#      uses: gradle/gradle-build-action@v2.4.2
#      with:
#        arguments: publish
#      env:
#        USERNAME: ${{ github.actor }}
#        TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions-ecosystem/action-regex-match@v2
      id: regex-match
      with:
#        text: ${{ github.event.release.tag_name }}
        text: "2023.01.00-rc.10"
        # 只匹配稳定版本
        regex: '^[vV]?[0-9]+(.[0-9]+)+'
    - run: |
        echo "regex match fail result: (${{ steps.regex-match.outputs.match }})"
    - uses: actions-ecosystem/action-regex-match@v2
      id: regex-match2
      with:
        text: "2023.01.00"
        # 只匹配稳定版本
        regex: '^[vV]?[0-9]+(.[0-9]+)+'
    - run: |
        echo "regex match success result: (${{ steps.regex-match2.outputs.match }})"
      # FIXME 针对稳定版本，并且无论成功与否都会发
    - name: Notify package added
      uses: actions-ecosystem/action-create-issue@v1
      if: ${{ steps.regex-match.outputs.match == github.event.release.tag_name  }}
      with:
        github_token: ${{ secrets.ACTION_ISSUE_TOKEN }}
        repo: foodiestudio/public
        title: ${{ github.repository }} | ${{ github.event.release.tag_name }} package created
        body: ${{ github.event.release.body }}
